@model RH.Model.Empresa

@{
    ViewBag.Title = "Editar Empresa";
}
<style>
    #info-img {
        display: none;
        color: gray;
    }

    .fa-question-circle {
        color: gray;
    }
</style>



@using (Html.BeginForm(Html.BeginForm("EditarEmpresa", "Empresa", FormMethod.Post, new { enctype = "multipart/form-data" })))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Emp_ID)

    <div class="container my-4">
        <div class="card">
            <div class="card-header">
                <h1>Alterar Empresa</h1>
            </div>
            <div class="card-body">
                <div class="form-row">
                    <div class="form-group col-md-12">
                        <input type="file" name="Imagem" id="Imagem" data-preview-file-type="text" data-msg-placeholder="Selecione uma Logo para sua empresa" />
                        @Html.ValidationMessage("Imagem", "", new { @class = "text-danger" })


                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.Emp_Nome, htmlAttributes: new { })

                        @Html.EditorFor(model => model.Emp_Nome, new { htmlAttributes = new { @class = "form-control ", @type = "text", @placeholder = "Digite o Nome da Empresa" } })
                        @Html.ValidationMessageFor(model => model.Emp_Nome, "", new { @class = "text-danger" })

                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.Emp_Estado, htmlAttributes: new { @class = "control-label " })

                        @Html.EditorFor(model => model.Emp_Estado, new { htmlAttributes = new { @class = "form-control", @type = "text", @placeholder = "Digite o Estado da Empresa" } })
                        @Html.ValidationMessageFor(model => model.Emp_Estado, "", new { @class = "text-danger" })

                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.Emp_Cidade, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.Emp_Cidade, new { htmlAttributes = new { @class = "form-control", @type = "text", @placeholder = "Digite a Cidade da Empresa" } })
                            @Html.ValidationMessageFor(model => model.Emp_Cidade, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.Emp_Endereco, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.Emp_Endereco, new { htmlAttributes = new { @class = "form-control", @type = "text", @placeholder = "Digite o EndereÃ§o da Empresa" } })
                            @Html.ValidationMessageFor(model => model.Emp_Endereco, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.Emp_CNPJ, htmlAttributes: new { @class = "control-label " })
                        <div class="">
                            @Html.EditorFor(model => model.Emp_CNPJ, new { htmlAttributes = new { @class = "form-control", @type = "text", @placeholder = "Digite o CNPJ da Empresa" } })
                            @Html.ValidationMessageFor(model => model.Emp_CNPJ, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.Emp_RegistroEstadual, htmlAttributes: new { @class = "control-label " })
                        <div class="">
                            @Html.EditorFor(model => model.Emp_RegistroEstadual, new { htmlAttributes = new { @class = "form-control", @type = "text", @placeholder = "Digite o Registro Estadual da Empresa" } })
                            @Html.ValidationMessageFor(model => model.Emp_RegistroEstadual, "", new { @class = "text-danger" })
                        </div>
                    </div>





                </div>
            </div>
            <div class="card-footer">
                <div class="from-group col-md-12">
                    <button type="submit" class="btn btn-outline-secondary"><span class="fa fa-plus"></span> Salvar</button>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        document.querySelector(".fa-question-circle").addEventListener("click", () => {
            var a = (document.getElementById("info-img").style.display);
            if (a == "none") {
                document.getElementById("info-img").style.display = "inline";
            } else {
                document.getElementById("info-img").style.display = "none";
            }

        });
    </script>

    <script>
        $(document).ready(function () {
            $("#Imagem").fileinput({ language: "pt-BR", 'showUpload': false, 'previewFileType': 'any' });
            $("#Imagem").change(function (e) {
                for (var i = 0; i < e.originalEvent.srcElement.files.length; i++) {
                    var file = e.originalEvent.srcElement.files[i];

                    var reader = new FileReader();
                    reader.onloadend = function () {
                        $("#aImagem").attr("src", reader.result);
                    }
                    reader.readAsDataURL(file);
                }
            });

            $("#aImagem").mouseover(function () {
                $(this).css("cursor", "pointer");
                $(this).css("width", "150%");
                $(this).css("heigth", "240px");
            });

        });
    </script>
}
